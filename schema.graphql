type TwitterPool @entity{
   id: ID!
   name: String!
   describe: String!
   cover: String!
   status: String!
   end_time: BigInt!
   create_time: BigInt!
   update_time: BigInt!
   white_list: [Account!]
   requirement: String
   twitter_link: String!
   winner_account: [Account!]
   winner_record: [Record!]
   creator_id: Account!
   ft_prize: [FT!]
   nft_prize: [NFT!]
   join_account: [Account!]
}


type Account @entity{
   id: ID!
   name: String!
   joined_prize_pool: [TwitterPool!]  @derivedFrom(field: "join_account")
   whitelist_pool: [TwitterPool!]  @derivedFrom(field: "white_list")
   created_pool: [TwitterPool!] @derivedFrom(field: "creator_id")
   winned_pool: [TwitterPool!] @derivedFrom(field: "winner_account")
   winned_prize: [Record!] @derivedFrom(field: "receiver")
   sender_activity: [Activity!] @derivedFrom(field: "sender")
   recevier_activity: [Activity!] @derivedFrom(field: "receiver")
}

type FT @entity{
    id: ID!
    token_id: String!
    amount: String!
}

type NFT @entity{
    id: ID!
    contract_id: String!
    nft_id: String!    
    prize_pools: [TwitterPool!]  @derivedFrom(field: "nft_prize")
}

type Record @entity{
   id: ID!
   receiver: Account!
   FT_Prize: FT
   NFT_Prize: NFT
   type: String!
   transaction_hash: String!
}


type Activity @entity{
   id: ID!
   sender: Account!
   contract_id: Account!
   receiver: Account!
   method: String!
   transaction_hash: String!
   ft: FT
   nft: NFT
   near: BigInt
   timestamp: BigInt!
   msg: String!
   type: String!
}


